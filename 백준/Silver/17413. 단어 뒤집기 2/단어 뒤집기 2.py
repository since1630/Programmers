## 17413번 단어 뒤집기 2
# 이 문제는 처음 '<'를 만났을 때와 만나지 않았을 때의 경우를 나누어 코드를 작성해야 한다.
# '<'부터 '>' 까지의 단어들은 word라는 변수에 바로 누적시키기로 하고 그 외의 단어들은 리스트에 담은 뒤 한번에 뒤집어서 word에 누적시키자.
# 반복은 입력값의 길이만큼 반복해야 하며 반복문을 실행할 때마다 index 값을 1씩 증가 시킨다.
# 1.word라는 변수를 만들고 값을 '' 로 할당한다. 빈 리스트도 만들어 주자.
# 2.1 일단 '<' 를 만나면 '>' 를 만나기 전까지 현재 순회 값을 무한정으로 word에 추가한다. 추가 했으니 i를 1 증가시킨다.
# 2.2 하지만 '<' 를 만났을 때 무작정 word에 해당값을 담으면 안된다. '<' 출현 이전의 단어들은 리스트에 담겨 있을텐데 이 리스트가 현재 비었는지를 먼저 체크해야한다. 비어있지 않다면 해당 값을 뒤집은 뒤 word에 추가해준 후 2번 로직을 진행해야 한다. 
# 3.공백을 만났을 때도 리스트에 있는 누적된 글자들을 뒤집어서 word에 누적시킨 뒤 리스트를 리셋한다. 그 뒤 i를 1 증가 시킨다.
# 4.'<'도 아니고 공백도 아니라면 현재 글자는 리스트에 담아준다. 담았으면 i을 증가 시킨다.
# 5.i가 입력값 글자 갯수와 동일하면 순회가 종료되고 리스트에 남아있는 글자들을 뒤집어서 word에 누적시킨다.
# 6.word를 출력한다.

inp = input()
word = ''
lst = []
i = 0
while i != len(inp):
    if inp[i] == '<':
        if len(lst) != 0:
            word += ''.join(lst[::-1])
            lst = []
        while True:
            word += inp[i]
            i += 1
            if inp[i] == '>':
                word += inp[i]
                i += 1
                break
    
    elif inp[i] == ' ':
        word += ''.join(lst[::-1]) + ' '
        lst = []
        i += 1
    else:
        lst.append(inp[i])
        i += 1

if len(lst) != 0:
    word += ''.join(lst[::-1])

print(word)
